二分查找针对的是一个 有序 的数据集合，查找思想有点类似分治思想。
每次都通过跟区间的中间元素对比，将待查找的区间缩小为之前的一半，直到找到要查找的元素，或者区间被缩小为 0。
O(logn) 惊人的查找速度。

二分查找应用场景的局限性
1.二分查找依赖的是顺序表结构，简单点说就是数组。
2.二分查找针对的是有序数据。
3.数据量太小不适合二分查找。
4.数据量太大也不适合二分查找。
二分查找更适合处理静态数据，也就是没有频繁的数据插入、删除操作。

二分查找用来求一个数的平方根，知道大概范围，不断通过条件判断，缩小范围，直到找到符合要求的解。简直一切数学公式都可以暴力求解。
学会把一些问题转化为二分查找问题，求解、数字等一般可以联想二分查找

变体一：查找第一个值等于给定值的元素
有序数据集合中存在重复的数据，我们希望找到第一个值等于给定值的数据，这样之前的二分查找代码还能继续工作吗？

变体二：查找最后一个值等于给定值的元素
类似变体一

变体三：查找第一个大于等于给定值的元素

变体四：查找最后一个小于等于给定值的元素

如何快速定位出一个 IP 地址的归属地？
1.我们可以先预处理这 12 万条数据，让其按照起始 IP 从小到大排序。如何来排序呢？我们知道，IP 地址可以转化为 32 位的整型数。
ip地址的每段可以看成是一个0-255的整数，1Bit8位，把每段拆分成一个二进制形式组合起来，然后把这个二进制数转变成一个长整数 32位。
2.然后，这个问题就可以转化为我刚讲的第四种变形问题“在有序数组中，查找最后一个小于等于某个给定值的元素”了。
